---

# == Notes ==

# This CI definition uses a GitLab provided include template

# GitLab automatically passes artifacts from previous stages by default

# Secret variables
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/MAGIC/SIIS/-/settings/ci_cd
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensitive values are represented by "[Sensitive]"
#
# - AWS IAM user for use within GitLab CI
#   > AWS_ACCESS_KEY_ID
#   > AWS_SECRET_ACCESS_KEY
#
# - AWS IAM user for use within Nomad job
#   > NOMAD_AWS_ACCESS_KEY_ID: "[Sensitive]"
#   > NOMAD_AWS_SECRET_ACCESS_KEY: "[Sensitive]"
#
# - GitLab deploy token for deploying to Nomad
#   create a deploy token at https://gitlab.data.bas.ac.uk/MAGIC/SIIS/-/settings/repository
#   - name: 'Nomad'
#   - scopes: 'read_registry'
#   > NOMAD_DOCKER_REGISTRY_USERNAME: "nomad"
#   > NOMAD_DOCKER_REGISTRY_PASSWORD: "[Sensitive]"

# == Includes ==

include:
- template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

# == Global settings ==

stages:
  - üß™ test
  - üèó build
  - üì¶ package
  - üöÄ deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_CERT_PATH: /certs/client
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_VERIFY: 1
  GITLAB_REGISTRY: docker-registry.data.bas.ac.uk

black:
  stage: üß™ test
  image:
    name: docker-registry.data.bas.ac.uk/magic/siis/api:latest
    entrypoint: [""]
  script:
    - "black --check api/"
  needs: []
  rules:
    - changes:
      - 'api/**/*.*'

build-app:
  stage: üèó build
  image:
    name: docker-registry.data.bas.ac.uk/magic/siis/app:latest
    entrypoint: [""]
  variables:
    SERVICE_API_ENDPOINT: http://10.70.1.145:32002/api
    SERVICE_API_KV_ENDPOINT: http://10.70.1.145:32003/kv
    SERVICE_API_OGC_ENDPOINT: http://10.70.1.145:32001/geoserver/ows
  before_script:
    - 'cd app'
    - 'yarn install'
  script:
    - "yarn build"
  needs: []
  artifacts:
    paths:
      - app/dist
    expire_in: 1 month
  rules:
    - changes:
      - 'app/**/*.*'

package-app:
  stage: üì¶ package
  image:
    name: docker:19.03-dind
    entrypoint: [""]
  before_script:
    - 'echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin'
    - 'cp -r ./app/dist/ ./app/support/docker-packaging/'
    - 'cd app/support/docker-packaging/'
  script:
    - 'docker build . -t $CI_REGISTRY_IMAGE/deploy/app:latest'
    - 'docker push $CI_REGISTRY_IMAGE/deploy/app:latest'
  services:
    - docker:dind
  tags:
    - dnd
  needs:
    - job: build-app
      artifacts: true
  rules:
    - changes:
      - 'app/**/*.*'

package-api:
  stage: üì¶ package
  image:
    name: docker:19.03-dind
    entrypoint: [""]
  before_script:
    - 'echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin'
    - 'cp -r ./api/api/ ./api/support/docker-packaging/'
    - 'cd api/support/docker-packaging/'
  script:
    - 'docker build . -t $CI_REGISTRY_IMAGE/deploy/api:latest'
    - 'docker push $CI_REGISTRY_IMAGE/deploy/api:latest'
  services:
    - docker:dind
  tags:
    - dnd
  needs: []
  rules:
    - changes:
      - 'api/**/*.*'

deploy:
  stage: üöÄ deploy
  image:
    name: hashicorp/terraform:0.13.4
    entrypoint: [""]
  before_script:
    - "cd provisioning/terraform"
    - "export TF_VAR_nomad_update_key=$CI_JOB_ID"
    - "export TF_VAR_nomad_aws_access_key_id=$NOMAD_AWS_ACCESS_KEY_ID"
    - "export TF_VAR_nomad_aws_secret_access_key=$NOMAD_AWS_SECRET_ACCESS_KEY"
    - "export TF_VAR_nomad_bas_docker_registry_username=$NOMAD_DOCKER_REGISTRY_USERNAME"
    - "export TF_VAR_nomad_bas_docker_registry_password=$NOMAD_DOCKER_REGISTRY_PASSWORD"
  script:
    - 'terraform init'
    - 'terraform validate'
    - 'terraform apply -auto-approve -target nomad_job.integration'
  rules:
    - changes:
      - 'app/**/*.*'
      - 'api/**/*.*'
  environment:
    name: Integration
    url: http://10.70.1.145:32004/
