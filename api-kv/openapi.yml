---
info:
  contact:
    email: servicedesk@bas.ac.uk
    name: "API Support"
  description: "Internal persistence API for settings, preferences and state used in the SIIS frontend application"
  license:
    name: "Open Government Licence 3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence"
  title: "BAS Sea-Ice Information System - Frontend Value-Key API"
  version: "0.1.0"
  x-standards:
    json-api:
      version: 1
openapi: "3.0.0"
paths:
  /kv:
    delete:
      description: "Delete all key-values."
      operationId: kv-delete
      responses:
        ? "204"
        :
          description: "Default successful response"
      summary: "Delete all key-values"
      tags:
        - kv
    description: "All Key-values"
    get:
      description: "Get all key-values."
      operationId: kv-get
      responses:
        ? "200"
        :
          content:
            application/json:
              examples:
                default:
                  value: "{\"data\": {\"foo.bar\": \"value\"}, \"foo.bar.baz\": \"value2\"}}"
              schema:
                properties:
                  data:
                    description: Key-values
                    type: object
                required:
                  - data
          description: "Default successful response"
      summary: "Get all key-values"
      tags:
        - kv
    patch:
      description: "Replace any key-values specified in request with new values, or create new key-values as needed - i.e. key-values not mentioned in request will remain and use existing values."
      operationId: kv-patch
      requestBody:
        content:
          application/json:
            example:
              data:
                foo.bar: value3
            schema:
              properties:
                data:
                  description: Key-values
                  type: object
              required:
                - data
      responses:
        ? "204"
        :
          description: "Default successful response"
      summary: "Partially Update key-values once initially set"
      tags:
        - kv
    post:
      description: "Create key-values from supplied key-values."
      operationId: kv-post
      requestBody:
        content:
          application/json:
            example:
              data:
                foo.bar: value
                foo.bar.baz: value2
            schema:
              properties:
                data:
                  description: Key-values
                  type: object
              required:
                - data
      responses:
        ? "204"
        :
          description: "Default successful response"
        ? "400"
        :
          content:
            application/json:
              examples:
                key_values_already_set:
                  value: "{\"error\": Key-values not empty, use PUT or PATCH to update.}"
                missing_request_data:
                  value: "{\"error\": No data element in payload.}"
              schema:
                properties:
                  error:
                    description: Error
                    type: string
                required:
                  - error
          description: "Request error"
      summary: "Set key-values initially"
      tags:
        - kv
    put:
      description: "Replace all key-values with supplied key-values - i.e. if you omit an existing key from supplied data it will be removed. New key-values will be created as needed."
      operationId: kv-put
      requestBody:
        content:
          application/json:
            example:
              data:
                foo.bar: value3
                foo.bar.baz: value4
            schema:
              properties:
                data:
                  description: Key-values
                  type: object
              required:
                - data
      responses:
        ? "204"
        :
          description: "Default successful response"
      summary: "Update key-values once initially set"
      tags:
        - kv
    summary: "Key Values"
  ? "/kv/{key}"
  :
    delete:
      description: "Delete key-value."
      operationId: kv-single-delete
      parameters:
        -
          description: "key-value key"
          example: foo.bar
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        ? "204"
        :
          description: "Default successful response"
        ? "404"
        :
          content:
            application/json:
              example:
                value: "{\"error\": \"key foo.bar not found.\"}"
              schema:
                properties:
                  error:
                    description: Error
                    type: string
                required:
                  - error
          description: "Not Found"
      summary: "Delete key-value"
      tags:
        - kv
    description: "Single key-value"
    get:
      description: "Get key-value."
      operationId: kv-single-get
      parameters:
        -
          description: "key-value key"
          example: foo.bar
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        ? "200"
        :
          content:
            application/json:
              examples:
                default:
                  value: "{\"data\": {\"foo.bar\": \"value\"}}"
              schema:
                properties:
                  data:
                    description: Key-values
                    type: object
                required:
                  - data
          description: "Default successful response"
        ? "404"
        :
          content:
            application/json:
              example:
                value: "{\"error\": \"key foo.bar not found.\"}"
              schema:
                properties:
                  error:
                    description: Error
                    type: string
                required:
                  - error
          description: "Not Found"
      summary: "Get key-value"
      tags:
        - kv
    post:
      description: "Set key-value initally."
      operationId: kv-single-post
      parameters:
        -
          description: "key-value key"
          example: foo.bar
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        ? "201"
        :
          description: "Default successful response"
        ? "400"
        :
          content:
            application/json:
              examples:
                key_values_already_set:
                  value: "{\"error\": Key foo.bar already set, use PUT to update.}"
                missing_request_data:
                  value: "{\"error\": No data element in payload.}"
              schema:
                properties:
                  error:
                    description: Error
                    type: string
                required:
                  - error
          description: "Request error"
      summary: "Set key-value initally"
      tags:
        - kv
    put:
      description: "Update key-value."
      operationId: kv-single-put
      parameters:
        -
          description: "key-value key"
          example: foo.bar
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        ? "204"
        :
          description: "Default successful response"
        ? "400"
        :
          content:
            application/json:
              example:
                value: "{\"error\": No data element in payload.}"
              schema:
                properties:
                  error:
                    description: Error
                    type: string
                required:
                  - error
          description: "Request error"
        ? "404"
        :
          content:
            application/json:
              example:
                value: "{\"error\": \"key foo.bar not found.\"}"
              schema:
                properties:
                  error:
                    description: Error
                    type: string
                required:
                  - error
          description: "Not Found"
      summary: "Update key-value"
      tags:
        - kv
    summary: "Key Value"
servers:
  -
    url: "http://localhost:9001"
tags:
  -
    description: "Key Value"
    name: kv
